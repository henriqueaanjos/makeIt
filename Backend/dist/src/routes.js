"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const AuthenticationController_1 = require("./controller/AuthenticationController");
const GetInfoController_1 = require("./controller/GetInfoController");
const ListController_1 = require("./controller/ListController");
const ProfileUserController_1 = require("./controller/ProfileUserController");
const SignUpController_1 = require("./controller/SignUpController");
const TaskController_1 = require("./controller/TaskController");
const ensureAuthenticated_1 = require("./middleware/ensureAuthenticated");
const router = (0, express_1.Router)();
exports.router = router;
router.get('/', (req, res) => {
    return res.json({ message: 'Hello World' });
});
router.post('/authenticate', new AuthenticationController_1.AuthenticationController().handle);
router.post('/signup', new SignUpController_1.SignUpController().handle);
router.post('/lists', ensureAuthenticated_1.ensureAuthenticated, new ListController_1.ListController().handleCreate);
router.put('/lists', ensureAuthenticated_1.ensureAuthenticated, new ListController_1.ListController().handleUpdate);
router.delete('/lists/:id', ensureAuthenticated_1.ensureAuthenticated, new ListController_1.ListController().handleDelete);
router.put('/publish', ensureAuthenticated_1.ensureAuthenticated, new ListController_1.ListController().handlePublish);
router.post('/share', ensureAuthenticated_1.ensureAuthenticated, new ListController_1.ListController().handleShare);
router.post('/tasks', ensureAuthenticated_1.ensureAuthenticated, new TaskController_1.TaskController().handleCreate);
router.put('/tasks', ensureAuthenticated_1.ensureAuthenticated, new TaskController_1.TaskController().handleUpdate);
router.delete('/tasks/:id', ensureAuthenticated_1.ensureAuthenticated, new TaskController_1.TaskController().handleDelete);
router.put('/done', ensureAuthenticated_1.ensureAuthenticated, new TaskController_1.TaskController().handleDone);
router.get('/info', ensureAuthenticated_1.ensureAuthenticated, new GetInfoController_1.GetInfoController().handleGetAll);
router.get('/publishedList/:id', new GetInfoController_1.GetInfoController().handleGetTasksByList);
router.get('/users', ensureAuthenticated_1.ensureAuthenticated, new GetInfoController_1.GetInfoController().handleGetAllUsers);
router.get('/users/:id', ensureAuthenticated_1.ensureAuthenticated, new GetInfoController_1.GetInfoController().handleGetUsersFromList);
router.get('/profile', ensureAuthenticated_1.ensureAuthenticated, new ProfileUserController_1.ProfileUserController().handle);
